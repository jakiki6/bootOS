     1                                  ; Assembly example
     2                                   
     3                                  ; nasmw boot.asm -o boot.bin
     4                                  ; partcopy boot.bin 0 200 -f0
     5                                   
     6                                  [ORG 0xa200]              ; add to offsets
     7                                   
     8                                  start:   
     9 00000000 31C0                       xor ax, ax             ; make it zero
    10 00000002 8ED8                       mov ds, ax             ; DS=0
    11 00000004 8ED0                       mov ss, ax             ; stack starts at seg 0
    12 00000006 BC0077                     mov sp, 0x7700         ; 7700h past code start, 
    13                                                            ; making the stack 7.5k in size
    14                                   
    15 00000009 BE007C                     mov si, 0x7c00
    16 0000000C BF00A2                     mov di, 0xa200
    17 0000000F B90002                     mov cx, 0x0200
    18 00000012 F3A4                       rep movsb
    19 00000014 EA[1900]0000               jmp 0x0000:run
    20                                  run:
    21 00000019 B03F                       mov al, "?"
    22 0000001B CD26                       int 0x26
    23 0000001D 89F3                       mov bx, si
    24 0000001F BF007C                     mov di, 0x7c00
    25 00000022 CD23                       int 0x23
    26 00000024 72F3                       jc run
    27 00000026 FA                         cli                    ; no interrupts
    28 00000027 1E                         push ds                ; save real mode
    29                                   
    30 00000028 0F0116[5800]               lgdt [gdtinfo]         ; load gdt register
    31                                   
    32 0000002D 0F20C0                     mov  eax, cr0          ; switch to pmode by
    33 00000030 0C01                       or al,1                ; set pmode bit
    34 00000032 0F22C0                     mov  cr0, eax
    35                                   
    36 00000035 EB00                       jmp $+2                ; tell 386/486 to not crash
    37                                   
    38 00000037 BB0800                     mov  bx, 0x08          ; select descriptor 1
    39 0000003A 8EDB                       mov  ds, bx            ; 8h = 1000b
    40                                  
    41 0000003C 0F22C0                     mov  cr0, eax
    42 0000003F EA[4400]0800               jmp 0x8:pmode
    43                                  pmode:
    44 00000044 BB1000                     mov  bx, 0x10          ; select descriptor 2, instead of 1
    45 00000047 8EDB                       mov  ds, bx            ; 10h = 10000b
    46                                   
    47 00000049 24FE                       and al,0xFE            ; back to realmode
    48 0000004B 0F22C0                     mov  cr0, eax          ; by toggling bit again
    49 0000004E EA[5300]0000               jmp 0x0:huge_unreal
    50                                  huge_unreal:
    51 00000053 EA007C0000                 jmp 0x0000:0x7c00
    52                                   
    53                                  gdtinfo:
    54 00000058 1700                       dw gdt_end - gdt - 1   ;last byte in table
    55 0000005A [5E000000]                 dd gdt                 ;start of table
    56                                   
    57 0000005E 0000000000000000        gdt         dd 0,0        ; entry 0 is always unused
    58 00000066 FFFF0000009A8F00        flatcode    db 0xff, 0xff, 0, 0, 0, 10011010b, 10001111b, 0
    59 0000006E FFFF00000092CF00        flatdata    db 0xff, 0xff, 0, 0, 0, 10010010b, 11001111b, 0
    60                                  gdt_end:
    61                                   
    62 00000076 00<rept>                   times 510-($-$$) db 0  ; fill sector w/ 0's
    63 000001FE 55                         db 0x55                ; req'd by some BIOSes
    64 000001FF AA                         db 0xAA
