	org 0x7c00
	bits 16

video:	equ 0xb800

init:	mov ax, 0x0002
	int 0x10
	mov ax, video
	push ax
	push ax
	pop ds
	pop es
	cld
	mov ax, 0x000f
	mov cx, 2000
	xor di, di
	rep stosw
	xor di, di
	xor si, si
main:	call getch
	call handle
	jmp main
getch:	mov ah, 0x02
	int 0x16
	jz .end
	xor ax, ax
	int 0x16
.end:	ret
handle:	mov ah, 0x0f
	cmp al, 0x1b
	je .exit
	;cmp al, 0xa0
	;je .newline
	;cmp al, 0x0d
	;je .carraige
	;cmp al, 0x08
	;je .delete
	stosw
	ret
.exit:	xor si, si
	mov di, 0xa000
	mov cx, 2000
.loop1:	movsb
	inc di
	loop .loop1
	xor di, di
	mov ax, 0xf000
	mov cx, 2000
	rep stosw
	mov al, "*"
	int 0x26
	mov si, 0x7780
	mov di, 0xa000
	int 0x23
	int 0x20