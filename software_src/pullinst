org 0xc000
        pusha
        push es
        cld
        mov si, 0x7c00
        mov di, 0xc000
        mov cx, 0x0200
        rep movsb
        jmp 0x0000:0xc010
lbl:
        mov bx, data
        mov di, 0x7c00
        int 0x23
        jc err
        pop es
        popa
        jmp cs_command
err:
        mov al, 0x13
        int 0x22
        int 0x20
data:
        db "pull", 0
cs_command:
        mov al, "@"
        call input_line
        call xdigit             ; Get a hexadecimal digit
        mov cl,4
        shl al,cl
        xchg ax,cx
        call xdigit             ; Get a hexadecimal digit
        or al,cl
        mov byte [0x7a00 + 294], al
	int 0x20
xdigit:  
        lodsb
        cmp al,0x00             ; Zero character marks end of line
        je r
        sub al,0x30             ; Avoid spaces (anything below ASCII 0x30)
        jc xdigit
        cmp al,0x0a
        jc r
        sub al,0x07
        and al,0x0f   
        stc
r:
        ret
input_line:   
        int 0x26
	ret
